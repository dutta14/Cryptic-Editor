/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package safe;

import algorithms.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;
/**
 *
 * @author Anindya
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */ 
     JFileChooser open;  
     JPasswordField pwd;
     JFrame frm; 
     File f; 
     boolean encoded;
     JComboBox j1;
     String algo;
    public Editor() {
        f=new File("");
        setTitle("Cryptic Editor v3");
        initComponents();
    }

    // Do NOT modify this code. The content of this method is always  regenerated by the Form Editor.
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        pane = new javax.swing.JEditorPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        encodeMenu = new javax.swing.JMenu();
        encode = new javax.swing.JMenuItem();
        decode = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        jScrollPane2.setViewportView(pane);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        encodeMenu.setMnemonic('n');
        encodeMenu.setText("Encode");

        encode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        encode.setText("Encode");
        encode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encodeActionPerformed(evt);
            }
        });
        encodeMenu.add(encode);

        decode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        decode.setText("Decode");
        decode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeActionPerformed(evt);
            }
        });
        encodeMenu.add(decode);

        menuBar.add(encodeMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentsMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void decodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodeActionPerformed
       frm=new JFrame("Enter Password");
        pwd=new JPasswordField("Set Password");
       frm.setLayout(new FlowLayout());
       frm.setSize(300,100);
       frm.add(pwd);
       JButton ok=new JButton("OK");
       frm.add(ok);
       ok.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
              String algo=new database().checkpwd(f,pwd.getText());
              mainInt obj=null;
              if(algo==null) System.out.println("Wrong Password");
               
              else{
              switch(algo)
               {
                    case "Caesar Cipher": obj = new easyEn(); break;
                    case "Vignere Cipher": obj = new medEn(); break;
                    case "Rail Cipher": obj = new hardEn(); break;  
                }
              pane.setText(obj.decrypt(pane.getText()));
              }
              frm.setVisible(false);
              }
        });
       frm.setVisible(true);
    }//GEN-LAST:event_decodeActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
         frm=new JFrame("Open");
         frm.setSize(600,400);
        frm.add(open=new JFileChooser());
        open.addActionListener(new ActionListener()
        {
         public void actionPerformed(ActionEvent evt) 
         {
            pane.setText(new ReadWrite("",f=open.getSelectedFile()).readfrom());
            setTitle("Cryptic Editor v3 - " + f.getName());
            frm.setVisible(false);
         }
        });
        frm.setVisible(true);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        if(f.getName().equals("")) saveAsMenuItemActionPerformed(evt);
        else
           new ReadWrite(pane.getText(),f).writeinto();
        if(encoded)
             new database().add(f.toString(), pwd.getText(),algo);
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
         frm=new JFrame("Save");
         frm.setSize(600,400);
        open=new JFileChooser();
        open.setDialogType(JFileChooser.SAVE_DIALOG);
         open.addActionListener(new ActionListener()
        {
         public void actionPerformed(ActionEvent evt) 
         {
            new ReadWrite(pane.getText(),f=open.getSelectedFile()).writeinto();
            frm.setVisible(false);
         }
        });
        frm.add(open);
        frm.setVisible(true);
       if(encoded)
           new database().add(f.toString(), pwd.getText(),algo);
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void encodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encodeActionPerformed
        encoded=true;
        frm=new JFrame("Choose an Algorithm");
        String items[]={"Caesar Cipher","Vignere Cipher","Rail Cipher"};
        j1=new JComboBox(items);
        frm.setLayout(new FlowLayout());
        frm.setSize(300, 100);
        frm.add(j1);
        pwd=new JPasswordField("Set Password");
        frm.add(pwd);
        JButton ok=new JButton("OK");
        ok.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e) {
                algo=(String)j1.getSelectedItem();  
                mainInt obj = null;
                switch(algo)
                {
                    case "Caesar Cipher": obj = new easyEn(); break;
                    case "Vignere Cipher": obj = new medEn(); break;
                    case "Rail Cipher": obj = new hardEn(); break;  
                }
               pane.setText(obj.encrypt(pane.getText()));
               frm.setVisible(false);
            }
        });
        frm.add(ok);
        frm.setVisible(true);;
    }//GEN-LAST:event_encodeActionPerformed

    private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed
        JFrame contents = new JFrame("Contents");
        contents.setSize(300, 150);
        contents.setLayout(new GridLayout(2,1));
        JLabel lbl = new JLabel("This software can be used to decode and encode");
        JLabel lbl2 = new JLabel("files and keep them secure for editing.");
        contents.add(lbl);
        contents.add(lbl2);
        contents.setVisible(true);  
    }//GEN-LAST:event_contentsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
      frm=new JFrame();
      frm.setSize(350,100);
      frm.setLayout(new GridLayout(2, 1));
      frm.add(new JLabel("Cryptic Editor v3"));
      frm.add(new JLabel("Creators: Anindya Dutta and Parth Srivastav"));
      frm.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem decode;
    private javax.swing.JMenuItem encode;
    private javax.swing.JMenu encodeMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JEditorPane pane;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables
}
